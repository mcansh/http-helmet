name: 🧪 Test

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ⚙️ Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟧 Get pnpm version
        id: pnpm-version
        shell: bash
        run: |
          # get pnpm version from package.json packageManager field
          VERSION=$(node -e "console.log(require('./package.json').packageManager.replace(/pnpm@/, ''))")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'pnpm'

      - name: 🟧 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.VERSION }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
              cwd: ./

      - name: 🏗 Build
        run: npm run build

  test:
    name: "🧪 Test: (OS: ${{ matrix.os }} Node: ${{ matrix.node }})"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 18
          - 20
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🟧 Get pnpm version
        id: pnpm-version
        shell: bash
        run: |
          # get pnpm version from package.json packageManager field
          VERSION=$(node -e "console.log(require('./package.json').packageManager.replace(/pnpm@/, ''))")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: 🟧 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.VERSION }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
              cwd: ./

      - name: 🧪 Run Primary Tests
        run: pnpm run test
